# full spec see here: https://json.schemastore.org/pyproject.json

[project]
name = "sortipy"
dynamic = ["version"]
authors = [{ name = "Simon Fischer", email = "sortipy@simon-fischer.info" }]
description = "Spotify stuff"
license = { file = "LICENSE" }
requires-python = ">= 3.12"
readme = "README.md"
dependencies = ["spotipy", "python-dotenv", "httpx", "sqlalchemy"]
optional-dependencies = { dev = ["pytest", "pytest-cov", "ruff"] }

[build-system]
requires = ["setuptools>=71", "setuptools-scm>=8", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages.find = { where = ["src"] }
zip-safe = false
include-package-data = true
# the sdist still contains .tox and similar stuff - could be solved with a MANIFEST.in

[tool.setuptools_scm]

[tool.pytest]
ini_options.asyncio_mode = "strict"
ini_options.addopts = "--log-level DEBUG --cov --cov-report=lcov:lcov.info"
ini_options.testpaths = ["tests"]
ini_options.pythonpath = ["src"]

[tool.coverage]
run.source = ["src"]

[tool.ruff]
line-length = 100
lint.select = [
    "F",
    "E",
    # "W", # don't use, overlaps with formatter
    "C90",
    "I",
    "N",
    # "D", # don't use, ignore docstyling
    "UP",
    "YTT",
    "ANN",
    "ASYNC",
    "S",
    "BLE",
    "FBT",
    "B",
    "A",
    "COM",
    "C4",
    "DTZ",
    "T10",
    # "DJ", # we don't use Django
    # "EM", # our exceptions can use f-strings
    # "EXE", # not necessary, we don't have shebangs
    "FA",
    "ISC",
    "ICN",
    "LOG",
    "G",
    "INP",
    "PIE",
    "T20",
    # "PYI", # only necessary for stub files
    "PT",
    "Q",
    "RSE",
    "RET",
    "SLF",
    "SLOT",
    "SIM",
    "TID",
    "TC",
    "INT",
    "ARG",
    "PTH",
    # "TD", # don't need todo formatting
    "FIX",
    # "ERA", # commented out code: don't care
    # "PD", # pandas not used
    "PGH",
    "PL",
    "TRY",
    "FLY",
    # "NPY", # numpy not used
    # "FAST", # FastAPI not used
    # "AIR", # Airflow not used
    "PERF",
    "FURB",
    # "DOC", # no docstring linting
    "RUF",
]
lint.fixable = ["TC003"]
lint.ignore = [
    "G004",   # log with f-strings
    "TRY003", # use f-strings in exception constructors
    "S603",   # allow subprocess calls
    # see https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules:
    "E111",
    "E114",
    "E117",
    "D206",
    "D300",
    "Q000",
    "Q001",
    "Q002",
    "Q003",
    "COM812",
    "COM819",
    "ISC001",
    "ISC002",
    "TC006"
]
lint.per-file-ignores = { "tests/**/*.py" = [
    "S101",    # allow assert
    "PLR2004", # allow magic values
] }
lint.isort.required-imports = ["from __future__ import annotations"]

[tool.pyright] # see https://github.com/microsoft/pyright/blob/main/docs/configuration.md
include = ["src", "tests"]
ignore = ["**/__pycache__", ".venv", ".tox"]
typeCheckingMode = "strict"
pythonVersion = "3.12"
pythonPlatform = "Linux"
venvPath = "."
venv = ".venv"
